<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightBuzz.Vitruvius</name>
    </assembly>
    <members>
        <member name="T:LightBuzz.Vitruvius.BitmapGenerator`1">
            <summary>
            Describes a generic bitmap generator.
            </summary>
            <typeparam name="T">The type of frame (<see cref="T:Microsoft.Kinect.ColorFrame"/>, <see cref="T:Microsoft.Kinect.DepthFrame"/>, <see cref="T:Microsoft.Kinect.InfraredFrame"/>, <see cref="T:Microsoft.Kinect.BodyIndexFrame"/>, etc).</typeparam>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Pixels">
            <summary>
            Returns the RGB pixel values.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Width">
            <summary>
            Returns the width of the bitmap.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Height">
            <summary>
            Returns the height of the bitmap.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Bitmap">
            <summary>
            Returns the actual bitmap.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapGenerator`1.Update(`0)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.ColorBitmapGenerator">
            <summary>
            Creates the bitmap representation of a Kinect Color frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.ColorBitmapGenerator.PixelsResized">
            <summary>
            The byte array of the resized frame.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorBitmapGenerator.Update(Microsoft.Kinect.ColorFrame,Microsoft.Kinect.ColorImageFormat)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
            <param name="format">The specified color format.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorBitmapGenerator.Update(Microsoft.Kinect.ColorFrame,LightBuzz.Vitruvius.ColorFrameResolution)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
            <param name="resolution">The specified frame resolution.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorBitmapGenerator.Update(Microsoft.Kinect.ColorFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.DepthBitmapGenerator">
            <summary>
            Creates the bitmap representation of a Kinect Depth frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.HighlightedPixels">
            <summary>
            Returns the RGB pixel values with the players highlighted.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.HighlightedBitmap">
            <summary>
            Returns the actual bitmap with the players highlighted.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.DepthData">
            <summary>
            Returns the current depth values.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.BodyData">
            <summary>
            Returns the body index values.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.DepthBitmapGenerator.Update(Microsoft.Kinect.DepthFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect depth frame.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.DepthBitmapGenerator.Update(Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame)">
            <summary>
            Updates the bitmap with new frame data and highlights the players.
            </summary>
            <param name="depthFrame">The specified Kinect depth frame.</param>
            <param name="bodyIndexFrame">The specified Kinect body index frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.GreenScreenBitmapGenerator">
            <summary>
            Removes the background of a Kinect frame and keeps the tracked players only.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._depthData">
            <summary>
            The depth values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._bodyData">
            <summary>
            The body index values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._colorData">
            <summary>
            The RGB pixel values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._colorPoints">
            <summary>
            The color points used for the background removal (green-screen) effect.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.CoordinateMapper">
            <summary>
            The Coordinate Mapper used to map between the depth and color frames.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.#ctor">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.GreenScreenBitmapGenerator"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.#ctor(Microsoft.Kinect.CoordinateMapper)">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.GreenScreenBitmapGenerator"/>.
            </summary>
            <param name="mapper">The coordinate mapper used for the background removal.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.Update(Microsoft.Kinect.ColorFrame,Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="colorFrame">The specified color frame.</param>
            <param name="depthFrame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.InfraredBitmapGenerator">
            <summary>
            Creates the bitmap representation of a Kinect infrared frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.InfraredBitmapGenerator.InfraredData">
            <summary>
            Returns the current infrared values.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.InfraredBitmapGenerator.Update(Microsoft.Kinect.InfraredFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect infrared frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Axis">
            <summary>
            Represents an axis from the 3D space.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Axis.X">
            <summary>
            The X axis.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Axis.Y">
            <summary>
            The Y axis.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Axis.Z">
            <summary>
            The Z axis.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.BodyWrapper">
            <summary>
            Represents a Kinect <see cref="T:Microsoft.Kinect.Body"/>. Kinect does not allow us to explicitly create a new <see cref="T:Microsoft.Kinect.Body"/> object.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.TrackingId">
            <summary>
            The tracking identifier of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.IsTracked">
            <summary>
            Determines whether the current body is tracked.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.LeanTrackingState">
            <summary>
            The lean tracking state of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.Lean">
            <summary>
            The lean point of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandLeftConfidence">
            <summary>
            The tracking confidence of the left hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandRightConfidence">
            <summary>
            The tracking confidence of the right hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandLeftState">
            <summary>
            The state of the left hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandRightState">
            <summary>
            The state of the right hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.Joints">
            <summary>
            The joints of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.Map2D">
            <summary>
            The joint mapping on 2D of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.JointOrientations">
            <summary>
            The joint orientations of the current body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.Set(Microsoft.Kinect.Body,Microsoft.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Copies a <see cref="T:Microsoft.Kinect.Body"/> object into the current <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="body">The body to copy.</param>
            <param name="coordinateMapper">The coordinate mapper.</param>
            <param name="visualization">The visualization mode (color/depth/infrared).</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.Create(Microsoft.Kinect.Body,Microsoft.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Creates a new <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> according to the specified parameters.
            </summary>
            <param name="body">The original body to copy.</param>
            <param name="coordinateMapper">The coordinate mapper that will create a 2D rerpesentation of the joints.</param>
            <param name="visualization">The Color, Depth, or Infrared visualization type.</param>
            <returns>A complete body wrapper.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.SetMap2D(Microsoft.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            
            </summary>
            <param name="coordinateMapper"></param>
            <param name="visualization"></param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Capture">
            <summary>
            Provides some common methods for capturing and saving Kinect frames to disk.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Capture.Save(System.Windows.Media.ImageSource,System.String)">
            <summary>
            Captures the specified image source and saves it to the specified location.
            </summary>
            <param name="bitmap">The image source to capture.</param>
            <param name="file">The desired file path, including file name and extension, for the new image. Currently, JPEG and PNG formats are supported.</param>
            <returns>True if the bitmap file was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Capture.Save(System.String,System.String)">
            <summary>
            Saves the specified string content to the specified location.
            </summary>
            <param name="content">The string data to save.</param>
            <param name="file">The destination path for the file.</param>
            <returns>True if the bitmap file was successfully saved. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.ColorFrameResolution">
            <summary>
            Represents a custom color frame resolution.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_1920x1080">
            <summary>
            1920x1080 (native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_960x540">
            <summary>
            960x540 (1/2 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_640x360">
            <summary>
            640x360 (1/3 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_480x270">
            <summary>
            480x270 (1/4 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_384x216">
            <summary>
            384x216 (1/5 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_192x108">
            <summary>
            192x108 (1/10 native).
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Constants">
            <summary>
            Keeps some commonly used Kinect constant values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DPI">
            <summary>
            Kinect DPI.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.BYTES_PER_PIXEL">
            <summary>
            Bytes per pixel.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_COLOR_WIDTH">
            <summary>
            The default color frame width (1920).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_COLOR_HEIGHT">
            <summary>
            The default color frame height (1080).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_DEPTH_WIDTH">
            <summary>
            The default depth/infrared frame width (512).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_DEPTH_HEIGHT">
            <summary>
            The default depth/infrared frame height (424).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize">
            <summary>
            Image frame at single size equals with 1920 * 1080.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize">
            <summary>
            Image frame at buffer size equals with 1920 * 1080 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize">
            <summary>
            Image frame at full size equals with 1920 * 1080 * 4 because alpha is included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.depthInfraredImgFrameSingleSize">
            <summary>
            Image frame at single size equals with 512 * 424.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.depthInfraredImgFrameBufferSize">
            <summary>
            Image frame at buffer size equals with 512 * 424 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.depthInfraredImgFrameFullSize">
            <summary>
            Image frame at full size equals with 512 * 424 * 4 because alpha is included.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Face">
            <summary>
            Represents a High Definition Face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Quality">
            <summary>
            The quality of the current face alignment.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Alignment">
            <summary>
            The alignment of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.IsTracked">
            <summary>
            Determines whether the current face is tracked.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.IsTrackingIdValid">
            <summary>
            Determines whether the current face belongs to a tracked player.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Map2D">
            <summary>
            The point mapping on 2D of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Vertices">
            <summary>
            The complete set of face vertices.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Points">
            <summary>
            A set of <see cref="T:Microsoft.Kinect.Face.HighDetailFacePoints"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Orientation">
            <summary>
            The orientation of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.HeadPivotPoint">
            <summary>
            The head pivot point of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.AnimationUnits">
            <summary>
            The face animation units of the current face (e.g. Jaw Open, Eye Closed, etc).
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Face.GetAnimationUnit(Microsoft.Kinect.Face.FaceShapeAnimations)">
            <summary>
            Returns the confidence of the given face animation unit.
            </summary>
            <param name="animation">The proeprty to check for.</param>
            <returns>The estimated level of confidence (0 to 1).</returns>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeLeft">
            <summary>
            Returns the center of the Left Eye.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeRight">
            <summary>
            Returns the center of the Right Eye.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Jaw">
            <summary>
            Returns the center of the Jaw.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Mouth">
            <summary>
            Returns the position of the center of the Mouth.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekLeft">
            <summary>
            Returns the position of the Left Cheek.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekRight">
            <summary>
            Returns the position of the Right Cheek.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Forehead">
            <summary>
            Returns the position of the Forehead.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Nose">
            <summary>
            Returns the center of the Nose.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Chin">
            <summary>
            Returns the position of the Chin.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeLeft2D">
            <summary>
            Returns the center of the Left Eye.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeRight2D">
            <summary>
            Returns the center of the Right Eye.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Jaw2D">
            <summary>
            Returns the center of the Jaw.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Mouth2D">
            <summary>
            Returns the position of the center of the Mouth.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekLeft2D">
            <summary>
            Returns the position of the Left Cheek.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekRight2D">
            <summary>
            Returns the position of the Right Cheek.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Forehead2D">
            <summary>
            Returns the position of the Forehead.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Nose2D">
            <summary>
            Returns the center of the Nose.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Chin2D">
            <summary>
            Returns the position of the Chin.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Face.SetMap2D(Microsoft.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Sets the 2D positions of the primary Face points.
            </summary>
            <param name="coordinateMapper">The coordinate mapper to use.</param>
            <param name="visualization">The visualization (color, depth, or infrared).</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Visualization">
            <summary>
            Represents the visualization mode.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Visualization.Color">
            <summary>
            Color mode (1920x1080).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Visualization.Depth">
            <summary>
            Depth mode (512x424).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Visualization.Infrared">
            <summary>
            Infrared mode (512x424).
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.BitmapExtensions">
            <summary>
            Provides some common functionality for manipulating bitmaps.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._colorBitmapGenerator">
            <summary>
            The color bitmap generator.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._depthBitmapGenerator">
            <summary>
            The depth bitmap generator.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._infraredBitmapGenerator">
            <summary>
            The color bitmap generator.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._greenScreenBitmapGenerator">
            <summary>
            The background removal generator.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.ColorFrame)">
            <summary>
            Converts the specified color frame to a bitmap image.
            </summary>
            <param name="frame">The specified color frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.ColorFrame,System.Byte[]@)">
            <summary>
            Converts the specified color frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified color frame.</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.ColorFrame,LightBuzz.Vitruvius.ColorFrameResolution)">
            <summary>
            Converts the specified color frame to a bitmap image.
            </summary>
            <param name="frame">The specified color frame.</param>
            <param name="size">The new size of the frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.ColorFrame,LightBuzz.Vitruvius.ColorFrameResolution,System.Byte[]@)">
            <summary>
            Converts the specified color frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified color frame.</param>
            <param name="size">The new size of the frame.</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.DepthFrame)">
            <summary>
            Converts the specified depth frame to a bitmap image.
            </summary>
            <param name="frame">The specified depth frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.DepthFrame,System.Byte[]@)">
            <summary>
            Converts the specified depth frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified depth frame.</param>
            <param name="pixels">The actual pixels of the depth frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame)">
            <summary>
            Converts the specified depth and infrared frames to a bitmap image with the players highlighted.
            </summary>
            <param name="depthFrame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Converts the specified depth and infrared frames to a bitmap image with the players highlighted and outs the pixels.
            </summary>
            <param name="depthFrame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
            <param name="pixels">The actual pixels of the depth frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.InfraredFrame)">
            <summary>
            Converts the specified infrared frame to a bitmap image.
            </summary>
            <param name="frame">The specified infrared frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Microsoft.Kinect.InfraredFrame,System.Byte[]@)">
            <summary>
            Converts the specified infrared frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified infrared frame.</param>
            <param name="pixels">The actual pixels of the infrared frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Microsoft.Kinect.ColorFrame,Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="colorFrame">The specified <see cref="T:Microsoft.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Microsoft.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Microsoft.Kinect.BodyIndexFrame"/>.</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Microsoft.Kinect.ColorFrame,Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="colorFrame">The specified <see cref="T:Microsoft.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Microsoft.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Microsoft.Kinect.BodyIndexFrame"/>.</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Microsoft.Kinect.DepthFrame,Microsoft.Kinect.ColorFrame,Microsoft.Kinect.BodyIndexFrame)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="depthFrame">The specified <see cref="T:Microsoft.Kinect.DepthFrame"/>.</param>
            <param name="colorFrame">The specified <see cref="T:Microsoft.Kinect.ColorFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Microsoft.Kinect.BodyIndexFrame"/>.</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Microsoft.Kinect.DepthFrame,Microsoft.Kinect.ColorFrame,Microsoft.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="depthFrame">The specified <see cref="T:Microsoft.Kinect.DepthFrame"/>.</param>
            <param name="colorFrame">The specified <see cref="T:Microsoft.Kinect.ColorFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Microsoft.Kinect.BodyIndexFrame"/>.</param>
            <param name="pixels">The actual pixels of the depth frame</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Microsoft.Kinect.BodyIndexFrame,Microsoft.Kinect.ColorFrame,Microsoft.Kinect.DepthFrame)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="bodyIndexFrame">The specified <see cref="T:Microsoft.Kinect.BodyIndexFrame"/>.</param>
            <param name="colorFrame">The specified <see cref="T:Microsoft.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Microsoft.Kinect.DepthFrame"/>.</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(System.Byte[],LightBuzz.Vitruvius.Visualization,System.Windows.Media.PixelFormat)">
            <summary>
            Converts the specified byte array to a bitmap image.
            </summary>
            <param name="bytes">The byte array to convert.</param>
            <param name="visualization">The visualization type.</param>
            <param name="format">The bitmap image format.</param>
            <returns>The Bitmap representation of the given byte array.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.BodyExtensions">
            <summary>
            Provides some common functionality for manupulating body data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyExtensions._bodies">
            <summary>
            The body collection a Kinect sensor can recognize.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyExtensions._sortedBodies">
            <summary>
            The body collection sorted by tracking accuracy and distance.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyExtensions._trackingID">
            <summary>
            The tracking ID of the active body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Bodies(Microsoft.Kinect.BodyFrame)">
            <summary>
            Returns the bodies found in the current frame.
            </summary>
            <param name="frame">The BodyFrame generated by the Kinect sensor.</param>
            <returns>An array of bodies or an empty array if no bodies were found.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Closest(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Body})">
            <summary>
            Returns the closest body that is currently to the sensor.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The closest tracked body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Active(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Body})">
            <summary>
            Returns the active body. The active body is the one that is tracked well and stands within a reasonable distance.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The active player body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Sort(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Body})">
            <summary>
            Sorts the tracked bodies by tracking accuracy. The most active body is the first in the list.
            To find the active body, the tracking ID and distance are taking into consideration.
            </summary>
            <param name="bodies">A list of bodies.</param>
            <returns>A rearranged list of the tracked bodies, sorted by tracking accuracy and distance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.IsStable(Microsoft.Kinect.Body,System.Single,System.Single)">
            <summary>
            Determines whether the current body is stable, without leaning.
            </summary>
            <param name="body">The body to examine.</param>
            <param name="thresholdX">The accepted lean bound in the X axis. Defaults to 0.2</param>
            <param name="thresholdY">The accepted lean bound in the Y axis. Defaults to 0.3.</param>
            <returns>True if the body is stable. False if the body is leaning on one side.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.RotationAngle(Microsoft.Kinect.Body)">
            <summary>
            Calculates the rotation of the specified body in the vertical axis.
            </summary>
            <param name="body">The current body.</param>
            <returns>The rotation angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Height(Microsoft.Kinect.Body)">
            <summary>
            Retruns the height of the current body.
            </summary>
            <param name="body">The specified user body.</param>
            <returns>The height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.UpperHeight(Microsoft.Kinect.Body)">
            <summary>
            Returns the upper height of the current body (head to waist).
            </summary>
            <param name="body">A user body.</param>
            <returns>The upper height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.TrackedJoints(Microsoft.Kinect.Body,System.Boolean)">
            <summary>
            Returns a collection of the tracked joints of the current body.
            </summary>
            <param name="body">A user body.</param>
            <param name="includeInferred">True to include the joints with a TrackingState of Tracked or Inferred. False to include only the joints with a TrackingState of Tracked.</param>
            <returns>A collection of the tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.NumberOfTrackedJoints(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Joint})">
            <summary>
            Calculates the number of the tracked joints from the current collection.
            </summary>
            <param name="joints">A collection of joints.</param>
            <returns>The number of the accurately tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.NumberOfTrackedJoints(Microsoft.Kinect.Joint[])">
            <summary>
            Calculates the number of the tracked joints from the specified collection.
            </summary>
            <param name="joints">A collection of joints.</param>
            <returns>The number of the accurately tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.ToBodyWrapper(Microsoft.Kinect.Body)">
            <summary>
            Returns a <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object converted from body.
            </summary>
            <param name="body">The body to convert.</param>
            <returns>A <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> representation of the Body.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.BodyWrapperExtensions">
            <summary>
            Provides some common functionality for manupulating body wrapper data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._bodies">
            <summary>
            The body collection a Kinect sensor can recognize.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._sortedBodies">
            <summary>
            The body collection sorted by tracking accuracy and distance.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._trackingID">
            <summary>
            The tracking ID of the active body.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._matcher">
            <summary>
            The pose matching algorithm.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Closest(System.Collections.Generic.IEnumerable{LightBuzz.Vitruvius.BodyWrapper})">
            <summary>
            Returns the closest body that is currently to the sensor.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The closest tracked body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Active(System.Collections.Generic.IEnumerable{LightBuzz.Vitruvius.BodyWrapper})">
            <summary>
            Returns the active body. The active body is the one that is tracked well and stands within a reasonable distance.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The active player body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Sort(System.Collections.Generic.IEnumerable{LightBuzz.Vitruvius.BodyWrapper})">
            <summary>
            Sorts the tracked bodies by tracking accuracy. The most active body is the first in the list.
            To find the active body, the tracking ID and distance are taking into consideration.
            </summary>
            <param name="bodies">A list of bodies.</param>
            <returns>A rearranged list of the tracked bodies, sorted by tracking accuracy and distance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.IsStable(LightBuzz.Vitruvius.BodyWrapper,System.Single,System.Single)">
            <summary>
            Determines whether the current body is stable, without leaning.
            </summary>
            <param name="body">The current body.</param>
            <param name="thresholdX">The accepted lean bound in the X axis. Defaults to 0.2</param>
            <param name="thresholdY">The accepted lean bound in the Y axis. Defaults to 0.3.</param>
            <returns>True if the body is stable. False if the body is leaning on one side.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.RotationAngle(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Calculates the rotation of the specified body wrapper in the vertical axis.
            </summary>
            <param name="body">The current body wrapper.</param>
            <returns>The rotation angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Height(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Retruns the height of the current body.
            </summary>
            <param name="body">The specified user body.</param>
            <returns>The height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.UpperHeight(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Returns the upper height of the current body (head to waist).
            </summary>
            <param name="body">A user body.</param>
            <returns>The upper height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.TrackedJoints(LightBuzz.Vitruvius.BodyWrapper,System.Boolean)">
            <summary>
            Returns a collection of the tracked joints of the current body.
            </summary>
            <param name="body">A user body.</param>
            <param name="includeInferred">True to include the joints with a TrackingState of Tracked or Inferred. False to include only the joints with a TrackingState of Tracked.</param>
            <returns>A collection of the tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Match(LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Match(LightBuzz.Vitruvius.BodyWrapper,Microsoft.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Match(Microsoft.Kinect.Body,Microsoft.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.CopyTo(LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Copies the current body to another <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="thisBody"></param>
            <param name="body">The destination object.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.CaptureExtensions">
            <summary>
            Provides some common funcitonality for saving Kinect data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.CaptureExtensions._capture">
            <summary>
            The bitmap capture utility.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(System.Windows.Media.Imaging.WriteableBitmap,System.String)">
            <summary>
            Saves the current bitmap to the specified location.
            </summary>
            <param name="bitmap">The source bitmap image.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the bitmap file was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.ColorFrame,System.String)">
            <summary>
            Converts the current color frame to a bitmap and saves it to the specified location.
            </summary>
            <param name="frame">The source color frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.DepthFrame,System.String)">
            <summary>
            Converts the current depth frame to a bitmap and saves it to the specified location.
            </summary>
            <param name="frame">The source depth frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.InfraredFrame,System.String)">
            <summary>
            Converts the current infrared frame to a bitmap and saves it to the specified location.
            </summary>
            <param name="frame">The source infrared frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.DepthFrame,Microsoft.Kinect.BodyIndexFrame,System.String)">
            <summary>
            Converts the current depth and body index frames to a bitmap and saves it to the specified location.
            </summary>
            <param name="depthFrame">The source depth frame.</param>
            <param name="bodyIndexFrame">The source body index frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the image was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.BodyFrame,System.String)">
            <summary>
            Serializes the bodies of the current <see cref="T:Microsoft.Kinect.BodyFrame"/> and saves the file to the specified location.
            </summary>
            <param name="frame">The frame to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Body},System.String)">
            <summary>
            Serializes the current collection of <see cref="T:Microsoft.Kinect.Body"/> and saves the file to the specified location.
            </summary>
            <param name="bodies">The body collection to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the body collection was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.Body,System.String)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.Body"/> and saves the file to the specified location.
            </summary>
            <param name="body">The body to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the body was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.Joint,System.String)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.Joint"/> and saves the file to the specified location.
            </summary>
            <param name="joint">The joint to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the joint was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Microsoft.Kinect.JointOrientation,System.String)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.JointOrientation"/> and saves the file to the specified location.
            </summary>
            <param name="joint">The joint orientation to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the joint orientation was successfully saved. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.ColorFrameResolutionExtensions">
            <summary>
            Provides some common extension methods for the color frame resolution enumeration.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorFrameResolutionExtensions.GetSize(LightBuzz.Vitruvius.ColorFrameResolution)">
            <summary>
            Gets the resolution of the specified value as a 2D point.
            </summary>
            <param name="resolution">The specified resolution value.</param>
            <returns>A 2D-point representation of the resolution (X: width, Y: height).</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.FaceExtensions">
            <summary>
            Provides some common functionality for manupulating HD Face data.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Face(Microsoft.Kinect.Face.HighDefinitionFaceFrame)">
            <summary>
            Returns the HD face that is associated to the current <see cref="T:Microsoft.Kinect.Face.HighDefinitionFaceFrame"/>.
            </summary>
            <param name="frame">The HD face frame.</param>
            <returns>The corresponding HD Face instance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Face(Microsoft.Kinect.Face.HighDefinitionFaceFrame,Microsoft.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Returns the HD face that is associated to the current <see cref="T:Microsoft.Kinect.Face.HighDefinitionFaceFrame"/> and updates the 2D visualization of the primary face points.
            </summary>
            <param name="frame">The HD face frame.</param>
            <param name="coordinateMapper">The coordinate mapper to use.</param>
            <param name="visualization">The visualization (color, depth, or infrared).</param>
            <returns>The corresponding HD Face instance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyeLeftPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Eye.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Left Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyeRightPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Eye.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Right Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyebrowLeftPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Eye.
            </summary>
            <param name="face">A list of vertices.</param>
            <returns>A set of points that form the Left Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyebrowRightPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Eye.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Right Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.CheekLeftPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Cheek.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Left Cheek.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.CheekRightPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Cheek.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Right Cheek.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.NosePoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Nose.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Nose.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.MouthPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Mouth.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Mouth.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.JawPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Jaw.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>A set of points that form the Jaw.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.GetFacePoints(LightBuzz.Vitruvius.Face,Microsoft.Kinect.Face.HighDetailFacePoints[])">
            <summary>
            Returns the HD Face points associated to the specified indexes.
            </summary>
            <param name="face">The current HD Face.</param>
            <param name="indexes">The indexes of the desired <see cref="T:Microsoft.Kinect.Face.HighDetailFacePoints"/>.</param>
            <returns>A set of facial points in the 3D space.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.MathExtensions">
            <summary>
            Provides some commonly used Mathematical functions.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToRadians(System.Double)">
            <summary>
            Converts the specified angle from degrees to radians.
            </summary>
            <param name="angle">The angle, in degrees.</param>
            <returns>The same angle in radians.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToDegrees(System.Double)">
            <summary>
            Converts the specified angle from radians to degrees.
            </summary>
            <param name="angle">The angle, in radians.</param>
            <returns>The same angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Converts the specified vector into a 2-D point.
            </summary>
            <param name="vector">The vector to convert.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Microsoft.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Visualization,Microsoft.Kinect.CoordinateMapper)">
            <summary>
            Converts the specified CameraSpacePoint into a 2-D point.
            </summary>
            <param name="position">The CameraSpacePoint to convert.</param>
            <param name="visualization">The type of the conversion (color, depth, or infrared).</param>
            <param name="coordinateMapper">The CoordinateMapper to make the conversion.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Microsoft.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Converts the specified CameraSpacePoint into a 2-D point.
            </summary>
            <param name="position">The CameraSpacePoint to convert.</param>
            <param name="visualization">The type of the conversion (color, depth, or infrared).</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Microsoft.Kinect.ColorSpacePoint)">
            <summary>
            Converts the specified ColorSpacePoint into a 2-D point.
            </summary>
            <param name="position">The ColorSpacePoint to convert.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Microsoft.Kinect.DepthSpacePoint)">
            <summary>
            Converts the specified DepthSpacePoint into a 2-D point.
            </summary>
            <param name="position">The DepthSpacePoint to convert.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Microsoft.Kinect.CameraSpacePoint)">
            <summary>
            Converts the specified CameraSpacePoint into a 3-D vector structure.
            </summary>
            <param name="point">The CameraSpacePoint to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Microsoft.Kinect.ColorSpacePoint)">
            <summary>
            Converts the specified ColorSpacePoint into a 3-D vector structure.
            </summary>
            <param name="point">The ColorSpacePoint to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Microsoft.Kinect.DepthSpacePoint)">
            <summary>
            Converts the specified DepthSpacePoint into a 3-D vector structure.
            </summary>
            <param name="point">The DepthSpacePoint to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Microsoft.Kinect.PointF)">
            <summary>
            Converts the specified 2-D point into a 3-D vector structure.
            </summary>
            <param name="point">The point to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.IsNaN(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Determines whether the current vector values are numbers.
            </summary>
            <param name="vector">The specified vector to check.</param>
            <returns>True if any of the values is not a number. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToStringDetailed(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Creates a detailed string representation of the current vector.
            </summary>
            <param name="vector">The specified vector.</param>
            <returns>A detailed string representation of the vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint)">
            <summary>
            Calculates the angle between the specified points.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Axis)">
            <summary>
            Calculates the angle between the specified points around the specified axis.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <param name="axis">The axis around which the angle is calculated.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Microsoft.Kinect.ColorSpacePoint,Microsoft.Kinect.ColorSpacePoint,Microsoft.Kinect.ColorSpacePoint)">
            <summary>
            Calculates the angle between the specified points.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Microsoft.Kinect.DepthSpacePoint,Microsoft.Kinect.DepthSpacePoint,Microsoft.Kinect.DepthSpacePoint)">
            <summary>
            Calculates the angle between the specified points.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Microsoft.Kinect.Joint,Microsoft.Kinect.Joint,Microsoft.Kinect.Joint)">
            <summary>
            Calculates the angle between the specified body joints.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Microsoft.Kinect.Joint,Microsoft.Kinect.Joint,Microsoft.Kinect.Joint,LightBuzz.Vitruvius.Axis)">
            <summary>
            Calculates the angle between the specified body joints aroudn the specified axis.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <param name="axis">The axis around which the angle is calculated.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Length(Microsoft.Kinect.CameraSpacePoint)">
            <summary>
            Calculates the length of the specified 3-D point.
            </summary>
            <param name="point">The specified 3-D point.</param>
            <returns>The corresponding length, in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Length(Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint)">
            <summary>
            Returns the length of the segment defined by the specified points.
            </summary>
            <param name="point1">The first point (start of the segment).</param>
            <param name="point2">The second point (end of the segment).</param>
            <returns>The length of the segment (in meters).</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Length(Microsoft.Kinect.CameraSpacePoint[])">
            <summary>
            Returns the length of the segments defined by the specified points.
            </summary>
            <param name="points">A collection of two or more points.</param>
            <returns>The length of all the segments in meters.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.SerializationExtensions">
            <summary>
            Provides some common functionality for serializing and deserializing body data to JSON.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Microsoft.Kinect.BodyFrame)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.BodyFrame"/> to JSON.
            </summary>
            <param name="frame">The frame to serialize.</param>
            <returns>A JSON representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Body})">
            <summary>
            Serializes the current collection of <see cref="T:Microsoft.Kinect.Body"/> to JSON.
            </summary>
            <param name="bodies">The body collection to serialize.</param>
            <returns>A JSON representation of the current body collection.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Microsoft.Kinect.Body)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.Body"/> to JSON.
            </summary>
            <param name="body">The body to serialize.</param>
            <returns>A JSON representation of the current body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Serializes the current <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> to JSON.
            </summary>
            <param name="body">The body wrapper to serialize.</param>
            <returns>A JSON representation of the current body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Microsoft.Kinect.Joint)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.Joint"/> to JSON.
            </summary>
            <param name="joint">The joint to serialize.</param>
            <returns>A JSON representation of the current joint.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Microsoft.Kinect.JointOrientation)">
            <summary>
            Serializes the current <see cref="T:Microsoft.Kinect.JointOrientation"/> to JSON.
            </summary>
            <param name="joint">The joint to serialize.</param>
            <returns>A JSON representation of the current joint orientation.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(LightBuzz.Vitruvius.Face)">
            <summary>
            Converts an HD <see cref="T:LightBuzz.Vitruvius.Face"/> to JSON.
            </summary>
            <param name="face">The HD Face to serialize.</param>
            <returns>A JSON representation of the current HD Face.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToBody(System.String)">
            <summary>
            Converts the current JSON-formatted string to a <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="json">The JSON-formatted string to deserialize.</param>
            <returns>The corresponding <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToFace(System.String)">
            <summary>
            Converts the current JSON-formatted string to an HD <see cref="T:LightBuzz.Vitruvius.Face"/> object.
            </summary>
            <param name="json">The JSON-formatted string to deserialize.</param>
            <returns>The corresponding <see cref="T:LightBuzz.Vitruvius.Face"/> object.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gesture">
            <summary>
            Represents a Kinect gesture.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture.WINDOW_SIZE">
            <summary>
            The window size.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture.MAX_PAUSE_COUNT">
            <summary>
            The maximum number of frames allowed for a paused gesture.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._currentSegment">
            <summary>
            The current gesture segment we are matching against.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._pausedFrameCount">
            <summary>
            The number of frames to pause for when a pause is initiated.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._frameCount">
            <summary>
            The current frame.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._isPaused">
            <summary>
            Are we paused?
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.Gesture"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.#ctor(LightBuzz.Vitruvius.GestureType,LightBuzz.Vitruvius.IGestureSegment[])">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.Gesture"/> with the specified type and segments.
            </summary>
            <param name="type">The type of gesture.</param>
            <param name="segments">The segments of the gesture.</param>
        </member>
        <member name="E:LightBuzz.Vitruvius.Gesture.GestureRecognized">
            <summary>
            Occurs when a gesture is recognised.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Gesture.GestureType">
            <summary>
            The type of the current gesture.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Gesture.Segments">
            <summary>
            The segments which form the current gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body data.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.Reset">
            <summary>
            Resets the current gesture.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.GestureController">
            <summary>
            Represents a gesture controller.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureController._gestures">
            <summary>
            A list of all the gestures the controller is searching for.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureController"/> with all of the available gesture types.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.#ctor(LightBuzz.Vitruvius.GestureType)">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureController"/> with the specified gesture type.
            </summary>
            <param name="type">The gesture type to recognize.</param>
        </member>
        <member name="E:LightBuzz.Vitruvius.GestureController.GestureRecognized">
            <summary>
            Occurs when a gesture is recognized.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates all gestures.
            </summary>
            <param name="body">The body data to search for gestures.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.AddGesture(LightBuzz.Vitruvius.GestureType)">
            <summary>
            Adds the specified gesture for recognition.
            </summary>
            <param name="type">The predefined <see cref="T:LightBuzz.Vitruvius.GestureType" />.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.OnGestureRecognized(System.Object,LightBuzz.Vitruvius.GestureEventArgs)">
            <summary>
            Handles the GestureRecognized event of the g control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:LightBuzz.Vitruvius.GestureEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.GestureEventArgs">
            <summary>
            The gesture event arguments.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.GestureEventArgs.GestureType">
            <summary>
            Gets the gesture type.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.GestureEventArgs.TrackingID">
            <summary>
            Gets the skeleton tracking ID for the gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureEventArgs.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureEventArgs"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureEventArgs.#ctor(LightBuzz.Vitruvius.GestureType,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureEventArgs"/>.
            </summary>
            <param name="type">The gesture type.</param>
            <param name="trackingID">The tracking ID.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.GesturePartResult">
            <summary>
            Represents the gesture part recognition result.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GesturePartResult.Failed">
            <summary>
            Gesture part failed.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GesturePartResult.Succeeded">
            <summary>
            Gesture part succeeded.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GesturePartResult.Undetermined">
            <summary>
            Gesture part result undetermined.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.MenuSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.Menu"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.MenuSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.JoinedHandsSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.JoinedHands"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.JoinedHandsSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment3.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeRightSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeRightSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeRightSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeRightSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeRightSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeRightSegment3.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeUpSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeUp"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeUpSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeUpSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeUp"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeUpSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeUpSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeUp"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeUpSegment3.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeDownSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeDown"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeDownSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeDownSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeDown"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeDownSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeDownSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeDown"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeDownSegment3.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveLeftSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveLeftSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveLeftSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveLeftSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveRightSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveRightSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveRightSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveRightSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.ZoomSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.ZoomIn"/>/<see cref="F:LightBuzz.Vitruvius.GestureType.ZoomOut"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.ZoomSegment1.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.ZoomSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.ZoomIn"/>/<see cref="F:LightBuzz.Vitruvius.GestureType.ZoomOut"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.ZoomSegment2.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.ZoomSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.ZoomIn"/>/<see cref="F:LightBuzz.Vitruvius.GestureType.ZoomOut"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.ZoomSegment3.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.NamespaceDoc">
            <summary>
            Implements an extendable Kinect gesture engine, with some pre-defined gestures.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.GestureType">
            <summary>
            Represents the predefined gesture types.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.JoinedHands">
            <summary>
            Hands joined in front of chest.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.WaveRight">
            <summary>
            Waving using the right hand.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.WaveLeft">
            <summary>
            Waving using the left hand.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.Menu">
            <summary>
            Hand slightly bent above hip (XBOX-like gesture).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeLeft">
            <summary>
            Hand moved horizontally from right to left.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeRight">
            <summary>
            Hand moved horizontally from left to right.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeUp">
            <summary>
            Hand moved vertically from hip center to head.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeDown">
            <summary>
            Hand moved vertically from head to hip center.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.ZoomIn">
            <summary>
            Both hands extended closer to the chest.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.ZoomOut">
            <summary>
            Both hands extended farther from the chest.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.IGestureSegment">
            <summary>
            Represents a single gesture segment which uses relative positioning of body parts to detect a gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.IGestureSegment.Update(Microsoft.Kinect.Body)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.NamespaceDoc">
            <summary>
            A set of powerful Kinect extensions.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.BaseController`1">
            <summary>
            Generic class used to extract information from a series of frames.
            </summary>
            <typeparam name="T">The parameter we control, e.g. a Body.</typeparam>
        </member>
        <member name="F:LightBuzz.Vitruvius.BaseController`1.DEFAULT_WINDOW_SIZE">
            <summary>
            The default window size.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BaseController`1._windowSize">
            <summary>
            The window size of the reporter.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BaseController`1._isRunning">
            <summary>
            Indicates whether the reporter is running.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.#ctor">
            <summary>
            Creates a new instance of the controller.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BaseController`1.WindowSize">
            <summary>
            Gets or sets the window size for the reporter.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BaseController`1.IsRunning">
            <summary>
            Determines whether the reporter is running.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.Start">
            <summary>
            Starts the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.Stop">
            <summary>
            Stops the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.Update(`0)">
            <summary>
            Updates the controller.
            </summary>
            <param name="value">The parameters used to update the controller.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.PlayersController">
            <summary>
            Notifies when one or more players enter or leave the scene.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.PlayersController._consecutiveFrames">
            <summary>
            The number of the consecutive frames.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.PlayersController.BodyLeft">
            <summary>
            Occurs when a body leaves the field of view.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.PlayersController.BodyEntered">
            <summary>
            Occurs when a body enters the field of view.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PlayersController.Start">
            <summary>
            Starts the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PlayersController.Stop">
            <summary>
            Stops the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PlayersController.Update(System.Collections.Generic.IEnumerable{Microsoft.Kinect.Body})">
            <summary>
            Updates the controller.
            </summary>
            <param name="bodies">The bodies to gather data from.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.PlayersControllerEventArgs">
            <summary>
            The information the reported gives back to the calling function.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PlayersControllerEventArgs.Players">
            <summary>
            The tracking IDs of the people who entered or exited.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.PoseMatching">
            <summary>
            Provides a method to compare body states and poses.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.#ctor">
            <summary>
            Creates a new instance of the pose matching class.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the pose matching class with the specified parameters.
            </summary>
            <param name="checkHead">Consider or ignore the head.</param>
            <param name="checkArmLeft">Consider or ignore the left arm.</param>
            <param name="checkArmRight">Consider or ignore the right arm.</param>
            <param name="checkSpine">Consider or ignore the spine.</param>
            <param name="checkLegLeft">Consider or ignore the left leg.</param>
            <param name="checkLegRight">Consider or ignore the right leg.</param>
        </member>
        <member name="F:LightBuzz.Vitruvius.PoseMatching.DeviationBodyRotation">
            <summary>
            The allowed deviation of the rotation of the body (0.0 - 1.0).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckHead">
            <summary>
            Consider or ignore the head.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckArmLeft">
            <summary>
            Consider or ignore the left arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckArmRight">
            <summary>
            Consider or ignore the right arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckSpine">
            <summary>
            Consider or ignore the spine.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckLegLeft">
            <summary>
            Consider or ignore the left leg.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckLegRight">
            <summary>
            Consider or ignore the right leg.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationHead">
            <summary>
            The allowed deviation between the position of the head.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationArmLeft">
            <summary>
            The allowed deviation between the position of the left arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationArmRight">
            <summary>
            The allowed deviation between the position of the right arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationSpine">
            <summary>
            The allowed deviation between the position of the spine.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationLegLeft">
            <summary>
            The allowed deviation between the position of the left leg.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationLegRight">
            <summary>
            The allowed deviation between the position of the right leg.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.Matches(LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.Matches(Microsoft.Kinect.Body,Microsoft.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.Matches(LightBuzz.Vitruvius.BodyWrapper,Microsoft.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Controls.KinectAngle">
            <summary>
            Represents a XAML arc based on a given angle.
            </summary>
            <summary>
            KinectAngle
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle._vector1">
            <summary>
            The first vector.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle._vector2">
            <summary>
            The second vector.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle._angle">
            <summary>
            The angle, expressed in degrees.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.#ctor">
            <summary>
            Creates a new instance of KinectAngle.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectAngle.Angle">
            <summary>
            Returns the angle of the arc, in degrees.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectAngle.CoordinateMapper">
            <summary>
            Gets or sets coordinate mapper used to convert between the 3D world and the 2D screen coordinates.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle.CoordinateMapperProperty">
            <summary>
            The <see cref="T:Microsoft.Kinect.CoordinateMapper"/> dependency property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectAngle.Fill">
            <summary>
            Gets or sets the brush that specifies how to paint the interior of the shape. 
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle.FillProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectAngle.Fill"/> property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectAngle.Stroke">
            <summary>
            Gets or sets the brush that specifies how to paint the border of the shape. 
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle.StrokeProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectAngle.Stroke"/> dependency property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectAngle.StrokeThickness">
            <summary>
            Gets or sets the brush that specifies how to paint the border of the shape. 
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle.StrokeThicknessProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectAngle.StrokeThickness"/> dependency property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectAngle.SweepDirection">
            <summary>
            Gets or sets a value that specifies whether the arc is drawn in the Clockwise or Counterclockwise direction.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectAngle.SweepDirectionProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectAngle.SweepDirection"/> dependency property.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Update(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Calculates the angle and updates the arc according to the specifed vectors.
            </summary>
            <param name="start">The vector of the starting point.</param>
            <param name="middle">The vector of the middle point.</param>
            <param name="end">The vector of the end point.</param>
            <param name="desiredRadius">The desired arc radius.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Update(Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint,Microsoft.Kinect.CameraSpacePoint,System.Double)">
            <summary>
            Calculates the angle and updates the arc according to the specifed points.
            </summary>
            <param name="start">The starting point.</param>
            <param name="middle">The middle point.</param>
            <param name="end">The end point.</param>
            <param name="desiredRadius">The desired arc radius.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Update(Microsoft.Kinect.ColorSpacePoint,Microsoft.Kinect.ColorSpacePoint,Microsoft.Kinect.ColorSpacePoint,System.Double)">
            <summary>
            Calculates the angle and updates the arc according to the specifed points.
            </summary>
            <param name="start">The starting point.</param>
            <param name="middle">The middle point.</param>
            <param name="end">The end point.</param>
            <param name="desiredRadius">The desired arc radius.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Update(Microsoft.Kinect.DepthSpacePoint,Microsoft.Kinect.DepthSpacePoint,Microsoft.Kinect.DepthSpacePoint,System.Double)">
            <summary>
            Calculates the angle and updates the arc according to the specifed points.
            </summary>
            <param name="start">The starting point.</param>
            <param name="middle">The middle point.</param>
            <param name="end">The end point.</param>
            <param name="desiredRadius">The desired arc radius.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Update(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Calculates the angle and updates the arc according to the specifed points.
            </summary>
            <param name="start">The starting point.</param>
            <param name="middle">The middle point.</param>
            <param name="end">The end point.</param>
            <param name="desiredRadius">The desired arc radius.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Update(Microsoft.Kinect.Joint,Microsoft.Kinect.Joint,Microsoft.Kinect.Joint,System.Double)">
            <summary>
            Calculates the angle and updates the arc according to the specifed joints.
            </summary>
            <param name="start">The starting joint.</param>
            <param name="middle">The middle joint.</param>
            <param name="end">The end joint.</param>
            <param name="desiredRadius">The desired arc radius.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.Clear">
            <summary>
            Clears the current angle.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectAngle.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Controls.KinectJointSelector">
            <summary>
            Provides a XAML User Interface to select body joints.
            </summary>
            <summary>
            KinectJointSelector
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectJointSelector.#ctor">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.Controls.KinectJointSelector"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectJointSelector.JointsVisibility">
            <summary>
            Determines whether the User Interface will display the joints.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectJointSelector.JointsVisibilityProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectJointSelector.JointsVisibility"/> dependency property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectJointSelector.BodyBackground">
            <summary>
            The fill color of the human body shape.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectJointSelector.BodyBackgroundProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectJointSelector.BodyBackground"/> dependency property.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Controls.KinectJointSelector.JointSelected">
            <summary>
            Raised when a joint is selected.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectJointSelector.SelectJoint(Microsoft.Kinect.JointType)">
            <summary>
            Selects the specified joint.
            </summary>
            <param name="joint">The joint to select.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectJointSelector.Clear">
            <summary>
            Clears the selections and resets the User Interface.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectJointSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Controls.KinectViewer">
            <summary>
            Represents a XAML User Interface frame where RGB frames, body joints and body bones are drawn.
            </summary>
            <summary>
            KinectViewer
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer.DEFAULT_BRUSH">
            <summary>
            The default drawing brush.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer.DEFAULT_RADIUS">
            <summary>
            The default circle size.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer.DEFAULT_THICKNESS">
            <summary>
            The default line thickness.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer._bodyVisuals">
            <summary>
            A list of all the body visuals.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.#ctor">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.Controls.KinectViewer"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectViewer.CoordinateMapper">
            <summary>
            The coordinate mapper used to convert between the 3D world and the 2D screen coordinates.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer.CoordinateMapperProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectViewer.CoordinateMapper"/> dependency property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectViewer.Visualization">
            <summary>
            The visualization mode of the control (<see cref="F:LightBuzz.Vitruvius.Visualization.Color"/>, <see cref="F:LightBuzz.Vitruvius.Visualization.Depth"/>, <see cref="F:LightBuzz.Vitruvius.Visualization.Infrared"/>). Defaults to <see cref="F:LightBuzz.Vitruvius.Visualization.Color"/>.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer.VisualizationProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectViewer.Visualization"/> dependency property.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.KinectViewer.Image">
            <summary>
            The image to display.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.KinectViewer.ImageProperty">
            <summary>
            The <see cref="P:LightBuzz.Vitruvius.Controls.KinectViewer.Image"/> dependency property.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.Clear">
            <summary>
            Clears the visual data from the canvas.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.GetPoint(Microsoft.Kinect.CameraSpacePoint)">
            <summary>
            Maps the 3D point to its corresponding 2D point.
            </summary>
            <param name="position">The 3D space point.</param>
            <returns>The X, Y coordinates of the point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.DrawBody(Microsoft.Kinect.Body,System.Double,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush)">
            <summary>
            Draws the specified body.
            </summary>
            <param name="body">The body to draw.</param>
            <param name="jointRadius">The size of the joint ellipses.</param>
            <param name="jointBrush">The brush used to draw the joints.</param>
            <param name="boneThickness">The thickness of the bone lines.</param>
            <param name="boneBrush">The brush used to draw the bones.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.DrawBody(LightBuzz.Vitruvius.BodyWrapper,System.Double,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush)">
            <summary>
            Draws the specified body wrapper.
            </summary>
            <param name="body">The body wrapper to draw.</param>
            <param name="jointRadius">The size of the joint ellipses.</param>
            <param name="jointBrush">The brush used to draw the joints.</param>
            <param name="boneThickness">The thickness of the bone lines.</param>
            <param name="boneBrush">The brush used to draw the bones.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.DrawBody(Microsoft.Kinect.Body)">
            <summary>
            Draws the specified body.
            </summary>
            <param name="body">The body to draw</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.DrawBody(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Draws the specified body wrapper.
            </summary>
            <param name="body">The body wrapper to draw</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.KinectViewer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Controls.BodyVisual">
            <summary>
            Represents a body visualization for drawing joints and bones on a canvas.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Controls.BodyVisual.CONNECTIONS">
            <summary>
            The joint connections (bones).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.BodyVisual.TrackingId">
            <summary>
            The tracking ID of the corresponding body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.BodyVisual.Joints">
            <summary>
            The joints of the body and their corresponding ellipses.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Controls.BodyVisual.Bones">
            <summary>
            The bones of the body and their corresponding lines.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.#ctor">
            <summary>
            Creates a new instance of BodyVisual.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.Clear">
            <summary>
            Cleares the joints and bones.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.AddJoint(Microsoft.Kinect.JointType,System.Double,System.Windows.Media.Brush)">
            <summary>
            Adds the specified joint to the collection.
            </summary>
            <param name="joint">The joint type.</param>
            <param name="radius">The size of the ellipse</param>
            <param name="brush">The brush used to fill the ellipse.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.AddBone(System.Tuple{Microsoft.Kinect.JointType,Microsoft.Kinect.JointType},System.Double,System.Windows.Media.Brush)">
            <summary>
            Adds a bone to the collection.
            </summary>
            <param name="joints">The start and end of the line segment.</param>
            <param name="thickness">The thickness of the line.</param>
            <param name="brush">The brush used to fill the line.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.UpdateJoint(Microsoft.Kinect.JointType,System.Windows.Point)">
            <summary>
            Updates the position of the specified joint.
            </summary>
            <param name="joint">The joint type.</param>
            <param name="point">The position of the joint.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.UpdateBone(System.Tuple{Microsoft.Kinect.JointType,Microsoft.Kinect.JointType},System.Windows.Point,System.Windows.Point)">
            <summary>
            Updates the position of the specified bone.
            </summary>
            <param name="bone">The start and end of the line segment.</param>
            <param name="first">The position of the start of the segment.</param>
            <param name="second">The position of the end of the segment.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Controls.BodyVisual.Create(System.UInt64,System.Collections.Generic.IEnumerable{Microsoft.Kinect.JointType},System.Double,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush)">
            <summary>
            Creates a new BodyVisual object with the specified parameters.
            </summary>
            <param name="trackingId">The tracking ID of the corresponding body.</param>
            <param name="joints">The joint types of the body.</param>
            <param name="jointRadius">The desired joint size.</param>
            <param name="jointBrush">The desired joint brush.</param>
            <param name="boneThickness">The desired line thickness.</param>
            <param name="boneBrush">The desired line brush.</param>
            <returns>A new instance of BodyVisual.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Controls.NamespaceDoc">
            <summary>
            Provides a few XAML User Interface Kinect controls.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Vector3">
            <summary>
            Represents a displacement in 3-D space.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.MinValue">
            <summary>
            A vector with the minimum double values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.MaxValue">
            <summary>
            A vector with the maximum double values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.Epsilon">
            <summary>
            A vector with Epsilon values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.Zero">
            <summary>
            A vector with zero values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.X">
            <summary>
            Gets or sets the X component of this vector.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.Y">
            <summary>
            Gets or sets the Y component of this vector.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Vector3.Z">
            <summary>
            Gets or sets the Z component of this vector.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new instance of Vector3 with the specified initial values.
            </summary>
            <param name="x">Value of the X coordinate of the new vector.</param>
            <param name="y">Value of the Y coordinate of the new vector.</param>
            <param name="z">Value of the Z coordinate of the new vector.</param>
        </member>
        <member name="P:LightBuzz.Vitruvius.Vector3.Length">
            <summary>
            Gets the length (or magnitude) of this vector.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Vector3.LengthSquared">
            <summary>
            Gets the square of the length of this vector.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Add(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Adds two vectors and returns the result as a Vector structure.
            </summary>
            <param name="vector1">The first vector to add.</param>
            <param name="vector2">The second vector to add.</param>
            <returns>The sum of vector1 and vector2.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Subtract(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Subtracts the specified vector from another specified vector.
            </summary>
            <param name="vector1">The vector from which vector2 is subtracted.</param>
            <param name="vector2">The vector to subtract from vector1.</param>
            <returns>The difference between vector1 and vector2.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Multiply(System.Double,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Multiplies the specified scalar by the specified vector and returns the resulting vector.
            </summary>
            <param name="scalar">The scalar to multiply.</param>
            <param name="vector">The vector to multiply.</param>
            <returns>The result of multiplying scalar and vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Divide(LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Divides the specified vector by the specified scalar and returns the result as a Vector.
            </summary>
            <param name="vector">The vector structure to divide.</param>
            <param name="scalar">The amount by which vector is divided.</param>
            <returns>The result of dividing vector by scalar.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Negate">
            <summary>
            Negates the values of X, Y, and Z on this vector.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Equals(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares two vectors for equality.
            </summary>
            <param name="value">The vector to compare with this vector.</param>
            <returns>True if value has the same X and Y values as this vector; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Equals(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares the two specified vectors for equality.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if t he X and Y components of vector1 and vector2 are equal; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.DotProduct(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Calculates the Dot Product of the specified vectors.
            </summary>
            <param name="vector1">The first vector to evaluate.</param>
            <param name="vector2">The second vector to evaluate.</param>
            <returns>The calculated Dot Product.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.CrossProduct(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Calculates the Cross Product of the specified vectors
            </summary>
            <param name="vector1">The first vector to evaluate.</param>
            <param name="vector2">The second vector to evaluate.</param>
            <returns>The calculated Cross Product.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Distance(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Calculates the distance of the specified vectors in 3D space.
            </summary>
            <param name="vector1">The first vector to evaluate.</param>
            <param name="vector2">The second vector to evaluate.</param>
            <returns>The distance between vector1 and vector2.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Distance(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Calculates the distance btween the current and the specified vector in the 3D space.
            </summary>
            <param name="other">The vector to evaluate.</param>
            <returns>The distance between the vectors.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Angle(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Calculates the angle, expressed in degrees, between the two specified vectors.
            </summary>
            <param name="vector1">The first vector to evaluate.</param>
            <param name="vector2">The second vector to evaluate.</param>
            <returns>The angle, in degrees, between vector1 and vector2.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Normalize">
            <summary>
            Normalizes this vector (a normalized vector maintains its direction but its Length becomes 1).
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Interpolate(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Calculates the interpolated vector of the specified vectors and the specified fraction.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="fraction">The control fraction (a number between 0 and 1).</param>
            <returns>The interpolation vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Interpolate(LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Calculates the interpolated vector of the current vector, the specified vector and the specified fraction.
            </summary>
            <param name="vector">The specified vector.</param>
            <param name="fraction">The control fraction (a number between 0 and 1).</param>
            <returns>The interpolation vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Max(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares two vectors and returns the one with the maximum length.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>The vector with the maximum length.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Max(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares this vector with the the specified one and returns the one with the maximum length.
            </summary>
            <param name="value">The vector to compare.</param>
            <returns>The vector with the maximum length.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Min(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares two vectors and returns the one with the minimum length.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>The vector with the minimum length.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Min(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares this vector with the the specified one and returns the one with the minimum length.
            </summary>
            <param name="value">The vector to compare.</param>
            <returns>The vector with the minimum length.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Pitch(LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Rotates the specified vector around the X axis by the given degrees (Euler rotation around X).
            </summary>
            <param name="value">The vector to rotate.</param>
            <param name="degree">The number of the degrees to rotate.</param>
            <returns>The rotated vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Pitch(System.Double)">
            <summary>
            Rotates this vector around the X axis by the given degrees (Euler rotation around X).
            </summary>
            <param name="degree">The number of the degrees to rotate.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Yaw(LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Rotates the specified vector around the Y axis by the given degrees (Euler rotation around Y).
            </summary>
            <param name="value">The vector to rotate.</param>
            <param name="degree">The number of the degrees to rotate.</param>
            <returns>The rotated vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Yaw(System.Double)">
            <summary>
            Rotates this vector around the Y axis by the given degrees (Euler rotation around Y).
            </summary>
            <param name="degree">The number of the degrees to rotate.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Roll(LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Rotates the specified vector around the Z axis by the given degrees (Euler rotation around Z).
            </summary>
            <param name="value">The vector to rotate.</param>
            <param name="degree">The number of the degrees to rotate.</param>
            <returns>The rotated vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Roll(System.Double)">
            <summary>
            Rotates this vector around the Z axis by the given degrees (Euler rotation around Z).
            </summary>
            <param name="degree">The number of the degrees to rotate.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.CompareTo(System.Object)">
            <summary>
            Compares the length of this vector with the length of the specified object.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>A positive number if the length of this vector is greater than the other's. A negative number if it's smaller. Zero otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.CompareTo(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares the length of this vector with the length of the specified one.
            </summary>
            <param name="other">The vector to compare.</param>
            <returns>A positive number if the length of this vector is greater than the other's. A negative number if it's smaller. Zero otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.Equals(System.Object)">
            <summary>
            Compares two vectors for equality.
            </summary>
            <param name="obj">The cast vector to compare with this vector.</param>
            <returns>True if value has the same X and Y values as this vector; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.ToString">
            <summary>
            Creates a string representation of this vector based on the current culture.
            </summary>
            <returns>A string representation of this vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_Addition(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Adds two vectors and returns the result as a vector.
            </summary>
            <param name="vector1">The first vector to add.</param>
            <param name="vector2">The second vector to add.</param>
            <returns>The sum of vector1 and vector2.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_Subtraction(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Subtracts one specified vector from another.
            </summary>
            <param name="vector1">The vector from which vector2 is subtracted.</param>
            <param name="vector2">The vector to subtract from vector1.</param>
            <returns>The difference between vector1 and vector2.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_UnaryNegation(LightBuzz.Vitruvius.Vector3)">
            <summary>
            Operator -Vector (unary negation).
            </summary>
            <param name="vector">Vector being negated.</param>
            <returns>Negation of the given vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_Multiply(System.Double,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Multiplies the specified scalar by the specified vector and returns the resulting vector.
            </summary>
            <param name="scalar">The scalar to multiply.</param>
            <param name="vector">The vector to multiply.</param>
            <returns>The result of multiplying scalar and vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_Division(LightBuzz.Vitruvius.Vector3,System.Double)">
            <summary>
            Divides the specified vector by the specified scalar and returns the resulting vector.
            </summary>
            <param name="vector">The vector to divide.</param>
            <param name="scalar">The scalar by which vector will be divided.</param>
            <returns>The result of dividing vector by scalar.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_Equality(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares two vectors for equality.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if the X and Y components of vector1 and vector2 are equal; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_Inequality(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares two vectors for inequality.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if the X and Y components of vector1 and vector2 are different; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_LessThan(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares the lengths of two vectors.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if the length of vector1 is smaller than the length of vector2; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_LessThanOrEqual(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares the lengths of two vectors.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if the length of vector1 is smaller or equal than the length of vector2; otherwise, false.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_GreaterThan(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares the lengths of two vectors.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if the length of vector1 is greater than the length of vector2; otherwise, false</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3.op_GreaterThanOrEqual(LightBuzz.Vitruvius.Vector3,LightBuzz.Vitruvius.Vector3)">
            <summary>
            Compares the lengths of two vectors.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>True if the length of vector1 is greater or equal than the length of vector2; otherwise, false</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.VitruviusFrame">
            <summary>
            Represents a frame with Kinect data for recording and playback.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusFrame.Visualization">
            <summary>
            The visualization type (Color, Depth, or Infrared).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusFrame.Image">
            <summary>
            The image data.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusFrame.Body">
            <summary>
            The body data.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusFrame.Face">
            <summary>
            The face data.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.VitruviusPlayer">
            <summary>
            Plays Kinect frames: Color/Depth/Infrared + Body + Face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusPlayer.Interval">
            <summary>
            The playback time interval between two frames.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusPlayer.IsPlaying">
            <summary>
            Determines whether the player is actually playing.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusPlayer.Folder">
            <summary>
            The folder where the binary frame files are stored.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.VitruviusPlayer.FrameArrived">
            <summary>
            Notifies about a new frame.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusPlayer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.VitruviusPlayer"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusPlayer.Start">
            <summary>
            Starts playback.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusPlayer.Stop">
            <summary>
            Stops playback.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusPlayer.ReadNext">
            <summary>
            Reads the next frame in the order.
            </summary>
            <returns>A <see cref="T:LightBuzz.Vitruvius.VitruviusFrame"/> reresentation of the new frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusPlayer.ReadFrame(System.Int32)">
            <summary>
            Reads the specified Kinect frame.
            </summary>
            <param name="index">The position of the specified frame.</param>
            <returns>A <see cref="T:LightBuzz.Vitruvius.VitruviusFrame"/> reresentation of the specified frame.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.VitruviusRecorder">
            <summary>
            Records Kinect frames: Color/Depth/Infrared + Body + Face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusRecorder.Visualization">
            <summary>
            The visualization type to record (color, depth, or infrared).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusRecorder.IsRecording">
            <summary>
            Determines whether Vitruvius is recording.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.VitruviusRecorder.Folder">
            <summary>
            The complete file path of the folder where the recorded frames are stored.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusRecorder.Start">
            <summary>
            Starts recording.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusRecorder.Stop">
            <summary>
            Stops recording.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusRecorder.AddFrame(LightBuzz.Vitruvius.VitruviusFrame)">
            <summary>
            Adds a new frame to the recording sequence.
            </summary>
            <param name="frame">The Kinect frame to record.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusRecorder.GetFramePath(System.Int32)">
            <summary>
            Returns the file path of the specified frame.
            </summary>
            <param name="index">The sequence number of the frame to retrieve.</param>
            <returns>The complete file path of the frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusRecorder.Clear">
            <summary>
            Clears all the recording data from the directory.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.VitruviusRecorder.Dispose">
            <summary>
            Disposes the instance.
            </summary>
        </member>
    </members>
</doc>
